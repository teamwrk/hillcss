//
// Return the first character of a string
// @param  {String} $string
// @return {String}
//
@function getFirstChar ($string) {
    @return str_slice($string, 1, 1);
}

//
// Remove the first character of a string
// and return it
// @param  {String} $string
// @return {String}
//
@function removeFirstChar ($string) {
    @return str_slice($string, 2, -(length($string)));
}

//
// Returns if a string is equal to a list of
// matcher Strings
// @param  {String} $string         String to test
// @param  {List}   $matchers...    List of Strings to test against
// @return {Boolean}                True or false if it matches.
//
@function equalOnce ($string, $matchers...) {
    @each $matcher in $matchers {
        @if ($string == $matcher) {
            @return true;
        }
    }

    @return false;
}

//
// stripUnit($val)
// Returns the number without unit. E.g. 30px -> 30
//
// @param  {String} $val
// @return {Number}
//
@function stripUnit($val) {
  // Borrowed from Zurb Foundation _globals.scss
  @return $val / ($val * 0 + 1);
}

//
// rem($pixel[, $base])
// Calculates and returns a rem value based on pixel input
//
// Examples:
// width: rem(200px);       // width: 12.5rem;
// margin: rem(10) rem(20); // margin: 0.625rem 1.25rem;
//
// @param {String} $pixel
// @param {String} $base Optional rem value to get the right scope
// @return {String} rem value
//
@function rem($pixel, $base: 16px) {
    @return stripUnit($pixel) / stripUnit($base) * 1rem;
}
