@import 'helper';

//
// Placeholders for output optimizations
//
%_clearfix {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

//
// Generates layout helper
//
@if ($hill-layout-general-css-output) {
    @for $index from 1 through $hill-layout-space-multiplier {
        @if $index > 1 {
            $multiplier: "-#{$index}x";
        } @else {
            $multiplier: '';
        }

        [#{$hill-html-prefix}-layout*="space-top#{$multiplier}"]    { margin-top:    #{$hill-layout-space * $index}; }
        [#{$hill-html-prefix}-layout*="space-right#{$multiplier}"]  { margin-right:  #{$hill-layout-space * $index}; }
        [#{$hill-html-prefix}-layout*="space-bottom#{$multiplier}"] { margin-bottom: #{$hill-layout-space * $index}; }
        [#{$hill-html-prefix}-layout*="space-left#{$multiplier}"]   { margin-left:   #{$hill-layout-space * $index}; }
    }

    [#{$hill-html-prefix}-layout*="float-left"]  { float: left; }
    [#{$hill-html-prefix}-layout*="float-right"] { float: right; }
    [#{$hill-html-prefix}-layout*="clear"]       { @extend %_clearfix; }
}

//
// Generates box row to float boxes inside
// and box spaces
//
@if ($hill-layout-box-css-output or
     $hill-layout-responsive-css-output) {

    // Box rows
    [#{$hill-html-prefix}-layout*="row"]  {
        & > [#{$hill-html-prefix}-layout*="/"] {
            float: left;
        }

        @extend %_clearfix;
    }

    // Box spaces
    @if(strip-unit($hill-layout-box-space) > 0) {
        [#{$hill-html-prefix}-layout*="/"] {
            &:not(:last-child) {
                margin-right: #{$hill-layout-box-space};
            }
        }
    }
}

//
// Generates boxes
//
@if ($hill-layout-box-css-output) {

    //
    // Generates box width attributes
    // -> box-1/2, box-1/3 ...
    //
    @each $width in $hill-layout-boxes {
        [#{$hill-html-prefix}-layout*="box-#{$width}"] {
            display: block;
            width: fraction-to-percent($width);
        }
    }

    [#{$hill-html-prefix}-layout*="box-0"] {
        display: none;
    }
}

//
// Generates box breakpoints with relevant width sizes
//
@if ($hill-layout-responsive-css-output) {
    @each $breakpoint in $hill-layout-breakpoints {
        $breakpointName: nth($breakpoint, 1);

        // -> box-small-1/2, box-medium-1/2 ...
        @each $width in $hill-layout-boxes {
            @include hill-device-is ($breakpointName) {
                [#{$hill-html-prefix}-layout*="device-#{$breakpointName}-#{$width}"] {
                    display: block;
                    width: fraction-to-percent($width);
                }
            };
        }

        // -> box-small-0
        @include hill-device-is ($breakpointName) {
            [#{$hill-html-prefix}-layout*="device-#{$breakpointName}-0"] {
                display: none;
            }
        }
    }
}
